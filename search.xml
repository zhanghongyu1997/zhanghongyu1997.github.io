<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/17/hello-world/"/>
      <url>/2019/11/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dubbo学习笔记</title>
      <link href="/2019/10/08/dubbo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/10/08/dubbo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1-分布式基础理论"><a href="#1-分布式基础理论" class="headerlink" title="1. 分布式基础理论"></a>1. 分布式基础理论</h3><h4 id="1-1）-什么事分布式系统？"><a href="#1-1）-什么事分布式系统？" class="headerlink" title="1.1） 什么事分布式系统？"></a>1.1） 什么事分布式系统？</h4><p> 《分布式系统原理与范型》定义：</p><p>“分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统”</p><p>分布式系统（distributed system）是建立在网络之上的软件系统。</p><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需<strong>一个治理系统</strong>确保架构有条不紊的演进。</p><h4 id="1-2）-发展演变"><a href="#1-2）-发展演变" class="headerlink" title="1.2） 发展演变"></a>1.2） 发展演变</h4><p><img src="img/1.png" alt=""></p><p><strong>单一应用架构</strong></p><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。</p><p><img src="img/2.png" alt=""></p><p>适用于小型网站，小型管理系统，将所有功能都部署到一个功能里，简单易用。</p><p>缺点： 1、性能扩展比较难 </p><p>​       2、协同开发问题</p><p>​       3、不利于升级维护</p><p><strong>垂直应用架构</strong></p><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的Web框架(MVC)是关键。</p><p><img src="img/3.png" alt=""></p><p>​        通过切分业务来实现各个模块独立部署，降低了维护和部署的难度，团队各司其职更易管理，性能扩展也更方便，更有针对性。</p><p>​        缺点： 公用模块无法重复利用，开发性的浪费</p><p><strong>分布式服务架构</strong></p><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的<strong>分布式服务框架(RPC)</strong>是关键。</p><p><img src="img/4.png" alt=""></p><p><strong>流动计算架构</strong></p><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于<strong>提高机器利用率的资源调度和治理中心(SOA)[ Service Oriented Architecture]是关键</strong>。</p><p><img src="img/5.png" alt=""></p><h4 id="1-3）-RPC"><a href="#1-3）-RPC" class="headerlink" title="1.3） RPC"></a>1.3） RPC</h4><p><strong>什么叫RPC</strong></p><p>RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p><p><strong>RPC基本原理</strong></p><p><img src="img/6.png" alt=""></p><p><img src="img/7.png" alt=""></p><p>RPC两个核心模块：通讯，序列化。</p><h3 id="2、dubbo核心概念"><a href="#2、dubbo核心概念" class="headerlink" title="2、dubbo核心概念"></a>2、dubbo核心概念</h3><h4 id="2-1）-简介"><a href="#2-1）-简介" class="headerlink" title="2.1） 简介"></a>2.1） 简介</h4><p>Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。</p><p>官网：</p><p><a href="http://dubbo.apache.org/" target="_blank" rel="noopener">http://dubbo.apache.org/</a></p><h4 id="2-2）-基本概念"><a href="#2-2）-基本概念" class="headerlink" title="2.2） 基本概念"></a>2.2） 基本概念</h4><p><img src="img/8.png" alt=""></p><p><strong>服务提供者（Provider）</strong>：暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p><p>​    <strong>服务消费者（Consumer）</strong>: 调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p><p>​    <strong>注册中心（Registry）</strong>：注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p><p>​    <strong>监控中心（Monitor）</strong>：服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p><p><strong>》</strong>调用关系说明</p><ul><li><p>服务容器负责启动，加载，运行服务提供者。</p></li><li><p>服务提供者在启动时，向注册中心注册自己提供的服务。</p></li><li><p>服务消费者在启动时，向注册中心订阅自己所需的服务。</p></li><li><p>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</p></li><li><p>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p></li><li><p>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p></li></ul><h3 id="3、dubbo环境搭建"><a href="#3、dubbo环境搭建" class="headerlink" title="3、dubbo环境搭建"></a>3、dubbo环境搭建</h3><h4 id="3-1）-【Windows】-安装zookeeper"><a href="#3-1）-【Windows】-安装zookeeper" class="headerlink" title="3.1） 【Windows】-安装zookeeper"></a>3.1） 【Windows】-安装zookeeper</h4><hr><p><strong>1、下载zookeeper</strong></p><p>网址 <a href="https://archive.apache.org/dist/zookeeper/zookeeper-3.4.13/" target="_blank" rel="noopener">https://archive.apache.org/dist/zookeeper/zookeeper-3.4.13/</a> </p><p><strong>2、解压zookeeper</strong></p><p>解压运行zkServer.cmd ，初次运行会报错，没有zoo.cfg配置文件</p><p><strong>3、修改zoo.cfg配置文件</strong></p><p>将conf下的zoo_sample.cfg复制一份改名为zoo.cfg即可。</p><p>注意几个重要位置：</p><p>dataDir=./   临时数据存储的目录（可写相对路径）</p><p>clientPort=2181   zookeeper的端口号</p><p>修改完成后再次启动zookeeper</p><p><strong>4、使用zkCli.cmd测试</strong></p><p>ls /：列出zookeeper根下保存的所有节点</p><p>create –e /atguigu 123：创建一个atguigu节点，值为123</p><p>get /atguigu：获取/atguigu节点的值</p><hr><h4 id="3-2）-【Windows】-安装dubbo-admin管理控制台"><a href="#3-2）-【Windows】-安装dubbo-admin管理控制台" class="headerlink" title="3.2） 【Windows】-安装dubbo-admin管理控制台"></a>3.2） 【Windows】-安装dubbo-admin管理控制台</h4><p>dubbo本身并不是一个服务软件。它其实就是一个jar包能够帮你的java程序连接到zookeeper，并利用zookeeper消费、提供服务。所以你不用在Linux上启动什么dubbo服务。</p><p>但是为了让用户更好的管理监控众多的dubbo服务，官方提供了一个可视化的监控程序，不过这个监控即使不装也不影响使用。</p><p><a href="https://github.com/apache/dubbo-admin" target="_blank" rel="noopener">dubbo-admin的gitbub地址</a></p><p>安装步骤如下：</p><p><img src="img/9.png" alt=""></p><p><strong>在打包之前</strong>进入文件dubbo-admin-server/<a href="https://github.com/apache/dubbo-admin/tree/develop/dubbo-admin-server/src" target="_blank" rel="noopener">src</a>/<a href="https://github.com/apache/dubbo-admin/tree/develop/dubbo-admin-server/src/main" target="_blank" rel="noopener">main</a>/<a href="https://github.com/apache/dubbo-admin/tree/develop/dubbo-admin-server/src/main/resources" target="_blank" rel="noopener">resources</a>/application.properties</p><p>修改为指定zookeeper地址</p><p><img src="img/10.png" alt=""></p><h4 id="3-3）-【linux】-安装zookeeper"><a href="#3-3）-【linux】-安装zookeeper" class="headerlink" title="3.3） 【linux】-安装zookeeper"></a>3.3） 【linux】-安装zookeeper</h4><ol><li><p><strong>安装jdk</strong></p></li><li><p><strong>安装zookeeper</strong></p><p>1》下载zookeeper</p><p>网址 <a href="https://archive.apache.org/dist/zookeeper/zookeeper-3.4.11/" target="_blank" rel="noopener">https://archive.apache.org/dist/zookeeper/zookeeper-3.4.11/</a></p><p>wget <a href="https://archive.apache.org/dist/zookeeper/zookeeper-3.4.11/zookeeper-3.4.11.tar.gz" target="_blank" rel="noopener">https://archive.apache.org/dist/zookeeper/zookeeper-3.4.11/zookeeper-3.4.11.tar.gz</a></p><p>2》解压</p><pre class=" language-shell"><code class="language-shell">tar -zxvf zookeeper-3.4.11.tar.gz</code></pre><p>3》移动到指定位置并改名为zookeeper</p><pre class=" language-shell"><code class="language-shell">mv zookeeper-3.4.11 /usr/local/zookeeper</code></pre><ol start="3"><li><strong>开机启动zookeeper</strong></li></ol></li></ol><pre class=" language-shell"><code class="language-shell">1）-复制如下脚本#!/bin/bash#chkconfig:2345 20 90#description:zookeeper#processname:zookeeperZK_PATH=/usr/local/zookeeperexport JAVA_HOME=/usr/local/java/jdk1.8.0_171case $1 in         start) sh  $ZK_PATH/bin/zkServer.sh start;;         stop)  sh  $ZK_PATH/bin/zkServer.sh stop;;         status) sh  $ZK_PATH/bin/zkServer.sh status;;         restart) sh $ZK_PATH/bin/zkServer.sh restart;;         *)  echo "require start|stop|status|restart"  ;;esac2) 把脚本注册为Servicechkconfig --add zookeeperchkconfig --list3) -增加权限chmod +x /etc/init.d/zookeeperll /etc/init.d</code></pre><ol start="4"><li><p>配置zookeeper</p><p>1》初始化zookeeper配置文件</p><p>拷贝/usr/local/zookeeper/conf/zoo_sample.cfg到同一目录下改名为zoo.cfg</p><p>2》启动zookeeper</p><pre class=" language-shell"><code class="language-shell">service zookeeper start</code></pre></li></ol><h3 id="4、dubbo-helloworld"><a href="#4、dubbo-helloworld" class="headerlink" title="4、dubbo-helloworld"></a>4、dubbo-helloworld</h3><h4 id="4-1）-提出需求"><a href="#4-1）-提出需求" class="headerlink" title="4.1） 提出需求"></a>4.1） 提出需求</h4><p>某个电商系统，订单服务需要调用用户服务获取某个用户的所有地址；</p><p>我们现在 需要创建两个服务模块进行测试</p><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>订单服务web模块</td><td>创建订单等</td></tr><tr><td>用户服务service模块</td><td>查询用户地址等</td></tr></tbody></table><p>测试预期结果：</p><p>​    订单服务web模块在A服务器，用户服务模块在B服务器，A可以远程调用B的功能。</p><h4 id="4-2）-工程架构"><a href="#4-2）-工程架构" class="headerlink" title="4.2） 工程架构"></a>4.2） 工程架构</h4><p>根据 dubbo《服务化最佳实践》</p><p><strong>1.分包</strong></p><p>建议将服务接口，服务模型，服务异常等均放在 API 包中，因为服务模型及异常也是 API 的一部分，同时，这样做也符合分包原则：重用发布等价原则(REP)，共同重用原则(CRP)。</p><p>如果需要，也可以考虑在 API 包中放置一份 spring 的引用配置，这样使用方，只需在 spring 加载过程中引用此配置即可，配置建议放在模块的包目录下，以免冲突，如：com/alibaba/china/xxx/dubbo-reference.xml。</p><p><strong>2.粒度</strong></p><p>服务接口尽可能大粒度，每个服务方法应代表一个功能，而不是某功能的一个步骤，否则将面临分布式事务问题，Dubbo 暂未提供分布式事务支持。</p><p>服务接口建议以业务场景为单位划分，并对相近业务做抽象，防止接口数量爆炸。</p><p>不建议使用过于抽象的通用接口，如：Map query(Map)，这样的接口没有明确语义，会给后期维护带来不便。</p><p><img src="img/11.png" alt=""></p><h4 id="4-3-创建模块"><a href="#4-3-创建模块" class="headerlink" title="4.3) 创建模块"></a>4.3) 创建模块</h4><p>1、gmall-interface：公共接口层（model，service，exception…）</p><pre class=" language-java"><code class="language-java">作用：定义公共接口，也可以导入公共依赖<span class="token number">1</span>、Bean模型<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAddress</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String userAddress<span class="token punctuation">;</span>    <span class="token keyword">private</span> String userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String consignee<span class="token punctuation">;</span>    <span class="token keyword">private</span> String phoneNum<span class="token punctuation">;</span>    <span class="token keyword">private</span> String isDefault<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token number">2</span>、Service接口    UserService<span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span></code></pre><p>2、gmall-user：用户模块（对用户接口的实现）</p><pre class=" language-xml"><code class="language-xml">1、pom.xml  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">2</span>、Service<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        <span class="token keyword">return</span> userAddressDao<span class="token punctuation">.</span><span class="token function">getUserAddressById</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>3、gmall-order-web：订单模块（调用用户模块）</p><pre class=" language-xml"><code class="language-xml">1、pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">2</span>、测试<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>    UserService userService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 初始化订单，查询用户的所有地址并返回     * @param userId     * @return     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">initOrder</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>现在这样是无法进行调用的。我们gmall-order-web引入了gmall-interface，但是interface的实现是gmall-user，我们并没有引入，而且实际他可能还在别的服务器中。</p><h4 id="4-4-使用dubbo改造"><a href="#4-4-使用dubbo改造" class="headerlink" title="4.4) 使用dubbo改造"></a>4.4) 使用dubbo改造</h4><p>1、改造gmall-user作为服务提供者</p><pre class=" language-xml"><code class="language-xml">1、引入dubbo        <span class="token comment" spellcheck="true">&lt;!-- 引入dubbo --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 由于我们使用zookeeper作为注册中心，所以需要操作zookeeperdubbo 2.6以前的版本引入zkclient操作zookeeper dubbo 2.6及以后的版本引入curator操作zookeeper下面两个zk客户端根据dubbo版本2选1即可--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.101tec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>zkclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- curator-framework --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><pre class=" language-xml"><code class="language-xml">2、配置提供者<span class="token comment" spellcheck="true">&lt;!--当前应用的名字  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gmall-user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--指定注册中心的地址  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zookeeper://118.24.44.169:2181<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--使用dubbo协议，将服务暴露在20880端口  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>protocol</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dubbo<span class="token punctuation">"</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20880<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定需要暴露的服务 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.UserService<span class="token punctuation">"</span></span>                   <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userServiceImpl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">3</span>、启动服务    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        ClassPathXmlApplicationContext context <span class="token operator">=</span>                 <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"classpath:spring-beans.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span></code></pre><p>2、改造gmall-order-web作为服务消费者</p><pre class=" language-xml"><code class="language-xml">1、引入dubbo        <span class="token comment" spellcheck="true">&lt;!-- 引入dubbo --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 由于我们使用zookeeper作为注册中心，所以需要引入zkclient和curator操作zookeeper --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.101tec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>zkclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- curator-framework --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><pre class=" language-xml"><code class="language-xml">2、配置消费者信息<span class="token comment" spellcheck="true">&lt;!-- 应用名 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gmall-order-web<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定注册中心地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zookeeper://118.24.44.169:2181<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 生成远程服务代理，可以和本地bean一样使用demoService --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userService<span class="token punctuation">"</span></span>      <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.UserService<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span></code></pre><p>3、测试调用</p><p>访问gmall-order-web的initOrder请求，会调用UserService获取用户地址；</p><p>调用成功。说明我们order已经可以调用远程的UserService了；</p><p>4、注解版</p><pre class=" language-java"><code class="language-java"><span class="token number">1</span>、服务提供方    <span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>application name<span class="token operator">=</span><span class="token string">"gmall-user"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dubbo<span class="token operator">:</span>application<span class="token operator">></span>    <span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>registry address<span class="token operator">=</span><span class="token string">"zookeeper://118.24.44.169:2181"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>protocol name<span class="token operator">=</span><span class="token string">"dubbo"</span> port<span class="token operator">=</span><span class="token string">"20880"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>annotation <span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"com.atguigu.gmall.user.impl"</span><span class="token operator">/</span><span class="token operator">></span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>UserAddress<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>user<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>UserAddressMapper<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span> <span class="token comment" spellcheck="true">//使用dubbo提供的service注解，注册暴露服务</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    UserAddressMapper userAddressMapper<span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token number">2</span>、服务消费方<span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>application name<span class="token operator">=</span><span class="token string">"gmall-order-web"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dubbo<span class="token operator">:</span>application<span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>registry address<span class="token operator">=</span><span class="token string">"zookeeper://118.24.44.169:2181"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>annotation <span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"com.atguigu.gmall.order.controller"</span><span class="token operator">/</span><span class="token operator">></span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Reference</span>  <span class="token comment" spellcheck="true">//使用dubbo提供的reference注解引用远程服务</span>    UserService userService<span class="token punctuation">;</span></code></pre><h3 id="5、监控中心"><a href="#5、监控中心" class="headerlink" title="5、监控中心"></a>5、监控中心</h3><h4 id="5-1）、dubbo-admin"><a href="#5-1）、dubbo-admin" class="headerlink" title="5.1）、dubbo-admin"></a>5.1）、dubbo-admin</h4><p>图形化的服务管理页面；安装时需要指定注册中心地址，即可从注册中心中获取到所有的提供者/消费者进行配置管理</p><h4 id="5-2）、dubbo-monitor-simple"><a href="#5-2）、dubbo-monitor-simple" class="headerlink" title="5.2）、dubbo-monitor-simple"></a>5.2）、dubbo-monitor-simple</h4><p>略</p><h3 id="6、整合SpringBoot"><a href="#6、整合SpringBoot" class="headerlink" title="6、整合SpringBoot"></a>6、整合SpringBoot</h3><h4 id="引入spring-boot-starter以及dubbo和curator的依赖"><a href="#引入spring-boot-starter以及dubbo和curator的依赖" class="headerlink" title="引入spring-boot-starter以及dubbo和curator的依赖"></a>引入spring-boot-starter以及dubbo和curator的依赖</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="配置application-properties"><a href="#配置application-properties" class="headerlink" title="配置application.properties"></a>配置application.properties</h4><pre class=" language-properties"><code class="language-properties">提供者配置：<span class="token attr-name">dubbo.application.name</span><span class="token punctuation">=</span><span class="token attr-value">gmall-user</span><span class="token attr-name">dubbo.registry.protocol</span><span class="token punctuation">=</span><span class="token attr-value">zookeeper</span><span class="token attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token attr-value">192.168.67.159:2181</span><span class="token attr-name">dubbo.scan.base-package</span><span class="token punctuation">=</span><span class="token attr-value">com.atguigu.gmall</span><span class="token attr-name">dubbo.protocol.name</span><span class="token punctuation">=</span><span class="token attr-value">dubbo</span>application.name就是服务名，不能跟别的dubbo提供端重复<span class="token attr-name">registry.protocol</span> <span class="token attr-value">是指定注册中心协议</span><span class="token attr-name">registry.address</span> <span class="token attr-value">是注册中心的地址加端口号</span><span class="token attr-name">protocol.name</span> <span class="token attr-value">是分布式固定是dubbo,不要改。</span><span class="token attr-name">base-package</span> <span class="token attr-value"> 注解方式要扫描的包</span>消费者配置：<span class="token attr-name">dubbo.application.name</span><span class="token punctuation">=</span><span class="token attr-value">gmall-order-web</span><span class="token attr-name">dubbo.registry.protocol</span><span class="token punctuation">=</span><span class="token attr-value">zookeeper</span><span class="token attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token attr-value">192.168.67.159:2181</span><span class="token attr-name">dubbo.scan.base-package</span><span class="token punctuation">=</span><span class="token attr-value">com.atguigu.gmall</span><span class="token attr-name">dubbo.protocol.name</span><span class="token punctuation">=</span><span class="token attr-value">dubbo</span></code></pre><h4 id="dubbo注解"><a href="#dubbo注解" class="headerlink" title="dubbo注解"></a>dubbo注解</h4><p>@Service、@Reference</p><p><strong>【如果没有在配置中写dubbo.scan.base-package,还需要使用@EnableDubbo注解】</strong></p><h2 id="二、dubbo配置"><a href="#二、dubbo配置" class="headerlink" title="二、dubbo配置"></a>二、dubbo配置</h2><h3 id="1、配置原则"><a href="#1、配置原则" class="headerlink" title="1、配置原则"></a>1、配置原则</h3><p><img src="img/12.png" alt=""></p><p>JVM 启动 -D 参数优先，这样可以使用户在部署和启动时进行参数重写，比如在启动时需改变协议的端口。</p><p>XML 次之，如果在 XML 中有配置，则 dubbo.properties 中的相应配置项无效。</p><p>Properties 最后，相当于缺省值，只有 XML 没有配置时，dubbo.properties 的相应配置项才会生效，通常用于共享公共配置，比如应用名。</p><h3 id="2、重试次数"><a href="#2、重试次数" class="headerlink" title="2、重试次数"></a>2、重试次数</h3><p>失败自动切换，当出现失败，重试其它服务器，但重试会带来更长延迟。可通过 retries=”2” 来设置重试次数(不含第一次)。</p><pre class=" language-xml"><code class="language-xml">重试次数配置如下：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findFoo<span class="token punctuation">"</span></span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span></code></pre><h3 id="3、超时时间"><a href="#3、超时时间" class="headerlink" title="3、超时时间"></a>3、超时时间</h3><p>由于网络或服务端不可靠，会导致调用出现一种不确定的中间状态（超时）。为了避免超时导致客户端资源（线程）挂起耗尽，必须设置超时时间。</p><h4 id="1、Dubbo消费端"><a href="#1、Dubbo消费端" class="headerlink" title="1、Dubbo消费端"></a>1、Dubbo消费端</h4><pre class=" language-xml"><code class="language-xml">全局超时配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>consumer</span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>指定接口以及特定方法超时配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sayHello<span class="token punctuation">"</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span></code></pre><h4 id="2、Dubbo服务端"><a href="#2、Dubbo服务端" class="headerlink" title="2、Dubbo服务端"></a>2、Dubbo服务端</h4><pre class=" language-xml"><code class="language-xml">全局超时配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>provider</span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>指定接口以及特定方法超时配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>provider</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sayHello<span class="token punctuation">"</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>provider</span><span class="token punctuation">></span></span></code></pre><h4 id="3、配置原则"><a href="#3、配置原则" class="headerlink" title="3、配置原则"></a>3、配置原则</h4><p>dubbo推荐在Provider上尽量多配置Consumer端属性：</p><p><strong>1、作服务的提供者，比服务使用方更清楚服务性能参数，如调用的超时时间，合理的重试次数，等等</strong></p><p><strong>2、在Provider配置后，Consumer不配置则会使用Provider的配置值，即Provider配置可以作为Consumer的缺省值。否则，Consumer会使用Consumer端的全局设置，这对于Provider不可控的，并且往往是不合理的</strong></p><p>配置的覆盖规则：</p><p>1) 方法级配置别优于接口级别，即小Scope优先 </p><p>2) Consumer端配置 优于 Provider配置 优于 全局配置，</p><p>3) 最后是Dubbo Hard Code的配置值（见配置文档）</p><p><img src="img/13.png" alt=""></p><h4 id="4、版本号"><a href="#4、版本号" class="headerlink" title="4、版本号"></a>4、版本号</h4><p>当一个接口实现，出现不兼容升级时，可以用版本号过渡，版本号不同的服务相互间不引用。</p><p>可以按照以下的步骤进行版本迁移：</p><p>在低压力时间段，先升级一半提供者为新版本</p><p>再将所有消费者升级为新版本</p><p>然后将剩下的一半提供者升级为新版本</p><pre class=" language-xml"><code class="language-xml">老版本服务提供者配置：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.0.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>新版本服务提供者配置：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.0.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>老版本服务消费者配置：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barService<span class="token punctuation">"</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.0.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>新版本服务消费者配置：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barService<span class="token punctuation">"</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.0.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>如果不需要区分版本，可以按照以下的方式配置：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barService<span class="token punctuation">"</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.foo.BarService<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><h2 id="三、高可用"><a href="#三、高可用" class="headerlink" title="三、高可用"></a>三、高可用</h2><h3 id="1、zookeeper宕机与dubbo直连"><a href="#1、zookeeper宕机与dubbo直连" class="headerlink" title="1、zookeeper宕机与dubbo直连"></a>1、zookeeper宕机与dubbo直连</h3><p>现象：zookeeper注册中心宕机，还可以消费dubbo暴露的服务。</p><p>原因：</p><p><strong>健壮性</strong></p><ul><li><p>监控中心宕掉不影响使用，只是丢失部分采样数据</p></li><li><p>数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务</p></li><li><p>注册中心对等集群，任意一台宕掉后，将自动切换到另一台</p></li><li><p><strong>注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯</strong></p></li><li><p>服务提供者无状态，任意一台宕掉后，不影响使用</p></li><li><p>服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复</p></li></ul><p>高可用：通过设计，减少系统不能提供服务的时间；</p><h3 id="2、集群下dubbo负载均衡配置"><a href="#2、集群下dubbo负载均衡配置" class="headerlink" title="2、集群下dubbo负载均衡配置"></a>2、集群下dubbo负载均衡配置</h3><p>在集群负载均衡时，Dubbo 提供了多种均衡策略，缺省为 random 随机调用。</p><p><strong>负载均衡策略</strong></p><p><strong>Random LoadBalance</strong></p><p>随机，按权重设置随机概率。</p><p>在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。</p><p><strong>RoundRobin LoadBalance</strong></p><p>轮循，按公约后的权重设置轮循比率。</p><p>存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。</p><p><strong>LeastActive LoadBalance</strong></p><p>最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。</p><p>使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。</p><p><strong>ConsistentHash LoadBalance</strong></p><p>一致性 Hash，相同参数的请求总是发到同一提供者。</p><p>当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。算法参见：<a href="http://en.wikipedia.org/wiki/Consistent_hashing" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Consistent_hashing</a></p><p>缺省只对第一个参数 Hash，如果要修改，请配置 &lt;dubbo:parameter key=”hash.arguments” value=”0,1” /&gt;</p><p>缺省用 160 份虚拟节点，如果要修改，请配置 &lt;dubbo:parameter key=”hash.nodes” value=”320” /&gt;</p><h3 id="3、整合hystrix，服务熔断与降级处理"><a href="#3、整合hystrix，服务熔断与降级处理" class="headerlink" title="3、整合hystrix，服务熔断与降级处理"></a>3、整合hystrix，服务熔断与降级处理</h3><h4 id="1、服务降级"><a href="#1、服务降级" class="headerlink" title="1、服务降级"></a>1、服务降级</h4><p><strong>什么是服务降级？</strong></p><p><strong>当服务器压力剧增的情况下，根据实际业务情况及流量，对一些服务和页面有策略的不处理或换种简单的方式处理，从而释放服务器资源以保证核心交易正常运作或高效运作。</strong></p><p>可以通过服务降级功能临时屏蔽某个出错的非关键服务，并定义降级后的返回策略。</p><p>向注册中心写入动态配置覆盖规则：</p><pre class=" language-java"><code class="language-java">RegistryFactory registryFactory <span class="token operator">=</span> ExtensionLoader<span class="token punctuation">.</span><span class="token function">getExtensionLoader</span><span class="token punctuation">(</span>RegistryFactory<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAdaptiveExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Registry registry <span class="token operator">=</span> registryFactory<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span>URL<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"zookeeper://10.20.153.10:2181"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>registry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>URL<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>"override<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">0.0</span><span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">/</span>com<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>BarService<span class="token operator">?</span>category<span class="token operator">=</span>configurators<span class="token operator">&amp;</span>dynamic                              <span class="token operator">=</span><span class="token boolean">false</span><span class="token operator">&amp;</span>application<span class="token operator">=</span>foo<span class="token operator">&amp;</span>mock<span class="token operator">=</span>force<span class="token operator">:</span><span class="token keyword">return</span><span class="token operator">+</span>null"<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>其中：</p><ul><li><p>mock=force:return+null 表示消费方对该服务的方法调用都直接返回 null 值，不发起远程调用。用来屏蔽不重要服务不可用时对调用方的影响。</p></li><li><p>还可以改为 mock=fail:return+null 表示消费方对该服务的方法调用在失败后，再返回 null 值，不抛异常。用来容忍不重要服务不稳定时对调用方的影响。</p></li></ul><h4 id="2、集群容错"><a href="#2、集群容错" class="headerlink" title="2、集群容错"></a>2、集群容错</h4><p>在集群调用失败时，Dubbo 提供了多种容错方案，缺省为 failover 重试。</p><p><strong>集群容错模式</strong></p><pre class=" language-xml"><code class="language-xml">Failover Cluster失败自动切换，当出现失败，重试其它服务器。通常用于读操作，但重试会带来更长延迟。可通过 retries="2" 来设置重试次数(不含第一次)。重试次数配置如下：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>findFoo<span class="token punctuation">"</span></span> <span class="token attr-name">retries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span>Failfast Cluster快速失败，只发起一次调用，失败立即报错。通常用于非幂等性的写操作，比如新增记录。Failsafe Cluster失败安全，出现异常时，直接忽略。通常用于写入审计日志等操作。Failback Cluster失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。Forking Cluster并行调用多个服务器，只要一个成功即返回。通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过 forks="2" 来设置最大并行数。Broadcast Cluster广播调用所有提供者，逐个调用，任意一台报错则报错 [2]。通常用于通知所有提供者更新缓存或日志等本地资源信息。集群模式配置按照以下示例在服务提供方和消费方配置集群模式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">cluster</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>failsafe<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>或<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">cluster</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>failsafe<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><h2 id="四、dubbo原理"><a href="#四、dubbo原理" class="headerlink" title="四、dubbo原理"></a>四、dubbo原理</h2><h3 id="1、netty通信原理"><a href="#1、netty通信原理" class="headerlink" title="1、netty通信原理"></a>1、netty通信原理</h3><p>Netty是一个异步事件驱动的网络应用程序框架， 用于快速开发可维护的高性能协议服务器和客户端。它极大地简化并简化了TCP和UDP套接字服务器等网络编程。</p><p><strong>BIO：(Blocking IO)</strong></p><p><img src="img/14.png" alt=""></p><p><strong>NIO (Non-Blocking IO)</strong></p><p><img src="img/15.png" alt=""></p><p>Selector 一般称 为<strong>选择器</strong> ，也可以翻译为 <strong>多路复用器，</strong></p><p>Connect（连接就绪）、Accept（接受就绪）、Read（读就绪）、Write（写就绪）</p><p>Netty基本原理：</p><p><img src="img/16.png" alt=""></p><h3 id="2、dubbo原理"><a href="#2、dubbo原理" class="headerlink" title="2、dubbo原理"></a>2、dubbo原理</h3><h4 id="1、dubbo原理-框架设计"><a href="#1、dubbo原理-框架设计" class="headerlink" title="1、dubbo原理-框架设计"></a>1、dubbo原理-框架设计</h4><p><img src="img/17.png" alt=""></p><ul><li>config 配置层：对外配置接口，以 ServiceConfig, ReferenceConfig 为中心，可以直接初始化配置类，也可以通过 spring 解析配置生成配置类</li><li>proxy 服务代理层：服务接口透明代理，生成服务的客户端 Stub 和服务器端 Skeleton, 以 ServiceProxy 为中心，扩展接口为 ProxyFactory</li><li>registry 注册中心层：封装服务地址的注册与发现，以服务 URL 为中心，扩展接口为 RegistryFactory, Registry, RegistryService</li><li>cluster 路由层：封装多个提供者的路由及负载均衡，并桥接注册中心，以 Invoker 为中心，扩展接口为 Cluster, Directory, Router, LoadBalance</li><li>Monitor, MonitorService</li><li>protocol 远程调用层：封装 RPC 调用，以 Invocation, Result 为中心，扩展接口为 Protocol, Invoker, Exporter</li><li>exchange 信息交换层：封装请求响应模式，同步转异步，以 Request, Response 为中心，扩展接口为 Exchanger, ExchangeChannel, ExchangeClient, ExchangeServer</li><li>transport 网络传输层：抽象 mina 和 netty 为统一接口，以 Message 为中心，扩展接口为 Channel, Transporter, Client, Server, Codec</li><li>serialize 数据序列化层：可复用的一些工具，扩展接口为 Serialization, ObjectInput, ObjectOutput, ThreadPool</li></ul><h4 id="2、dubbo原理-启动解析、加载配置信息"><a href="#2、dubbo原理-启动解析、加载配置信息" class="headerlink" title="2、dubbo原理-启动解析、加载配置信息"></a>2、dubbo原理-启动解析、加载配置信息</h4><p><img src="img/18.png" alt=""></p><h4 id="3、dubbo原理-服务暴露"><a href="#3、dubbo原理-服务暴露" class="headerlink" title="3、dubbo原理-服务暴露"></a>3、dubbo原理-服务暴露</h4><p><img src="img/19.png" alt=""></p><h4 id="4、dubbo原理-服务引用"><a href="#4、dubbo原理-服务引用" class="headerlink" title="4、dubbo原理-服务引用"></a>4、dubbo原理-服务引用</h4><p><img src="img/20.png" alt=""></p><p>通过学习b站尚硅谷dubbo视频，然后跟着文档再敲一遍加深印象哈。</p>]]></content>
      
      
      
        <tags>
            
            <tag> dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiro学习笔记</title>
      <link href="/2019/09/18/shiro%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/18/shiro%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="shiro架构"><a href="#shiro架构" class="headerlink" title="shiro架构"></a>shiro架构</h2><p><img src="img/23.png" alt=""></p><ol><li><strong>subject：</strong>主体，可以是用户也可以是程序，主体要访问系统，系统需要对主体进行认证、授权。</li><li><strong>securityManager：</strong>安全管理器，主体进行认证和授权都 是通过securityManager进行。</li><li><strong>authenticator：</strong>认证器，主体进行认证最终通过authenticator进行的。</li><li><strong>authorizer：</strong>授权器，主体进行授权最终通过authorizer进行的。</li><li><strong>sessionManager：</strong>web应用中一般是用web容器对session进行管理，shiro也提供一套session管理的方式。</li><li><strong>SessionDao：</strong>  通过SessionDao管理session数据，针对个性化的session数据存储需要使用sessionDao。</li><li><strong>cache Manager：</strong>缓存管理器，主要对session和授权数据进行缓存，比如将授权数据通过cacheManager进行缓存管理，和ehcache整合对缓存数据进行管理。</li><li><strong>realm：</strong>域，领域，相当于数据源，通过realm存取认证、授权相关数据。</li></ol><p><strong>注意：在realm中存储授权和认证的逻辑。</strong></p><ol start="9"><li><strong>cryptography：</strong>密码管理，提供了一套加密/解密的组件，方便开发。比如提供常用的散列、加/解密等功能。比如 md5散列算法。</li></ol><h2 id="shiro认证流程"><a href="#shiro认证流程" class="headerlink" title="shiro认证流程"></a>shiro认证流程</h2><p><img src="img/shiro%E6%B5%81%E7%A8%8B.png" alt="shiro流程"></p><p><strong>shiro授权流程</strong></p><ol><li><p>对subject进行授权，调用方法IsPermitted(“permission串”)</p></li><li><p>SecurityManager执行授权，通过ModularRealmAuthorizer执行授权</p></li><li><p>ModularRealmAuthorizer执行realm(自定义)从数据库查询权限数据 调用realm的授权方法:doGetAuthorizationInfo</p></li><li><p>Realm从数据库查询权限数据，返回ModularRealmAuthorizer</p></li><li><p>ModularRealmAuthorizer调用PermissionResolver进行权限串比对</p></li><li><p>如果比对后，isPermitted中“permission串”在realm查询到权限数据中，说明用户访问permission串有权限，否则没有权限，抛出异常。</p><h2 id="shiro与项目整合"><a href="#shiro与项目整合" class="headerlink" title="shiro与项目整合"></a>shiro与项目整合</h2><h3 id="在web-xml中配置shiro的filter"><a href="#在web-xml中配置shiro的filter" class="headerlink" title="在web.xml中配置shiro的filter"></a>在web.xml中配置shiro的filter</h3><p>在web系统中，shiro也通过filter进行拦截，filter拦截成功后将操作权交给spring中配置的filterChain（过滤链）</p><p><img src="img/webxml.png" alt="web.xml"></p><h3 id="在spring中配置filter"><a href="#在spring中配置filter" class="headerlink" title="在spring中配置filter"></a>在spring中配置filter</h3><p>在applicationContext-shiro.xml 中配置web.xml中filter对应spring容器中的bean</p></li></ol><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shiroFilter<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.shiro.spring.web.ShiroFilterFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>securityManager<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>securityManager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/login.do<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 认证成功后统一跳转到first.action,建议不配置,因shiro认证成功后会自动跳转到上一个请求路径--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>successUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/index.do<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定无权限的访问页面 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>unauthorizedUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/refuse.jsp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filterChainDefinitions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 过滤器从上向下顺序执行 --></span>            <span class="token comment" spellcheck="true">&lt;!-- 对静态资源设置匿名访问 --></span>            /images/** = anon            /js/** = anon            /css/** = anon            /favicon.ico = anon            <span class="token comment" spellcheck="true">&lt;!--请求login.action地址,shiro清除session--></span>            /logout.do = logout            <span class="token comment" spellcheck="true">&lt;!--商品查询权限--></span>            <span class="token comment" spellcheck="true">&lt;!--/item/editItem.action = perms[item:update]--></span>            <span class="token comment" spellcheck="true">&lt;!--/item/edit.action = perms[item:add]--></span>            <span class="token comment" spellcheck="true">&lt;!-- 所用的url必须都认证通过后才可访问 --></span>            /** = authc        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 7.2:安全管理器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>securityManager<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.shiro.web.mgt.DefaultWebSecurityManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>realm<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userRealm<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--缓存器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cacheManager<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cacheManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 注入session管理器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionManager<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 7.3:自定义 realm --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userRealm<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.chxf.user.realm.MyRealm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 将凭证匹配器设置到realm中 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>credentialsMatcher<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>credentialsMatcher<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p><strong>1. 原理</strong></p><p>使用FormAuthenticationFilter过滤器实现，原理如下：</p><p>将用户没有认证时，请求loginURL进行认证，用户身份和用户密码提交数据到loginURL</p><p>FormAuthenticationFilter拦截住取出request中的username和password（两个参数名称是可以配置的）</p><p>FormAuthenticationFilter调用realm传入一个token（username和password）</p><p>Shiro中过滤器</p><p>Realm认证时根据username查询用户信息（在Activeuser中存储，包括userid，usercode，username，menus）</p><p>如果查询不到，realm返回null，FormAuthenticationFilter向request域中填充一个参数（记录了异常信息）</p><p>*<em>2. 实现 *</em></p><p>(登录提交地址，和applicationContext**-shiro.xml中配置的loginURL一致）</p><p><img src="img/controller-login.png" alt=""></p><p><strong>3. 认证拦截过滤器</strong></p><p>在applicationContext-shiro.xml中配置</p><p><img src="img/shiroxml.png" alt=""></p><h3 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h3><p><strong>使用logoutFilter</strong></p><p>不用我们去实现退出，只要去访问一个退出的URL（该URL是可以不存在），有logoutFilter拦截住，清除session 在applicationContext-shiro.xml中配置</p><p><strong>logout.action = logout</strong></p><h3 id="认证信息在页面显示"><a href="#认证信息在页面显示" class="headerlink" title="认证信息在页面显示"></a>认证信息在页面显示</h3><ol><li>认证后用户菜单在首页显示</li><li>认证后用户信息在页头显示</li></ol><h3 id="修改realm设置完整认证信息"><a href="#修改realm设置完整认证信息" class="headerlink" title="修改realm设置完整认证信息"></a>修改realm设置完整认证信息</h3><p>​    Realm从数据库查询用户信息，将用户菜单，usercode，username等 设置在SimpleAuthenticationInfo中 此处使用静态数据模拟实现</p><p><img src="img/realm.png" alt=""></p><p>//从shiro的session中取出activeUser</p><p>Subject subject = SecurityUtils.getSubject();</p><p>//取出身份信息</p><p>ActiveUser activeUser = (ActiveUser) subject.getPrincipal();</p><p>//通过model传到页面</p><p>Model.addAtribute(“activeUser”,activeUser);</p><h3 id="授权过滤器测试"><a href="#授权过滤器测试" class="headerlink" title="授权过滤器测试"></a>授权过滤器测试</h3><p><strong>使用permissionsAuthorizationFilter</strong></p><p>在applicationContext-shiro.xml中配置</p><p><img src="img/permision.png" alt=""></p><p><strong>测试流程:</strong></p><ol><li>在applicationContext-shiro.xml中配置filter规则</li></ol><p><img src="img/1.png" alt=""></p><ol start="2"><li>用户在认证通过后，请求/item/editItem.action</li><li>被permissionsAuthorizationFilter拦截，发现需要“item:edit”权限</li><li>permissionsAuthorizationFilter调用realm中的doGetAuthorizationInfo获取数据库中正确的权限</li><li>permissionsAuthorizationFilter对item:edit和从realm中获取权限进行对比，如果“item：edit”在realm返回的权限列表中，授权通过</li></ol><h3 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h3><ol><li><p><strong>在applicationContext-shiro.xml中配置过滤器连接，需要将全部的url和权限对应起来进行配置，比较麻烦不方便使用</strong></p><p>（1）可通过注解方式授权</p></li></ol><p><img src="img/2.png" alt=""></p><p>​        （2）在springmvc.xml中配置shiro注解支持，可在controller层中使用shiro注解配置权限</p><p><img src="img/3.png" alt=""></p><p>​        （3）通过jsp标签方式授权</p><p><img src="img/4.png" alt=""></p><p>​        （4）授权测试</p><p><img src="img/5.png" alt=""></p><ol start="2"><li><strong>每次授权都要通过realm查询数据库，对于系统性能有很大影响，可通过shiro缓存解决</strong></li></ol><p>​       Shiro中提供了对认证信息和授权信息的缓存，shiro默认是关闭认证信息缓存的，对于授权信息的缓存shiro默认开启的。主要研究授权信息缓存，因为授权的数据量大。</p><p>  （1）<strong>Shiro缓存流程</strong></p><p>当用户认证通过</p><p>该用户第一次授权：调用realm查询数据库</p><p>该用户第二次授权：不调用realm查询数据库，直接从缓存中取出授权信息（权限标识符）</p><p>  （2） <strong>使用ehcache</strong></p><pre><code>     1. 配置cacheManager</code></pre><p><img src="img/6.png" alt=""></p><p><img src="img/7.png" alt=""></p><ol start="2"><li>配置cacheManager</li></ol><p><img src="img/8.png" alt=""></p><ol start="3"><li><p>缓存清空</p><p>如果用户正常退出，缓存自动清空</p><p>如果用户非正常退出，缓存自动清空</p><p>如果修改了用户的权限，而用户不退出系统，修改的权限无法立即生效。</p><p>需要手动进行编程实现：</p><p>​    在权限修改后调用realm的clearCache方法清空缓存。</p><p>下边的代码正常开发时要放在service中调用</p><p>在service中，权限修改后调用下面的方法。</p><p>在realm中定义clearCache方法</p></li></ol><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//清除缓存</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearCached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    PrincipalCollection principals <span class="token operator">=</span> SecurityUtils<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrincipals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span>principals<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="sessionManager"><a href="#sessionManager" class="headerlink" title="sessionManager"></a>sessionManager</h3><p>和shiro整合后，使用shiro的session管理，shiro提供sessionDao操作会话数据</p><p><strong>配置sessionManager</strong></p><p><img src="img/9.png" alt=""></p><p><img src="img/10.png" alt=""></p><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><p><strong>思路</strong></p><p>Shiro使用FormAuthenticationFilter进行表单认证，验证校验的功能应该加在FormAuthenticationFilter中，在认证之前进行验证码校验</p><p> 需要一个FormAuthenticationFilter的子类，继承FormAuthenticationFilter，改写它的认证方法，在认证之前进行验证码校验</p><p><strong>自定义FormAuthenticationFilter</strong></p><p><img src="img/11.png" alt=""></p><p><strong>配置FormAuthenticationFilter</strong></p><p><img src="img/12.png" alt=""></p><p><img src="img/13.png" alt=""></p><p><img src="img/14.png" alt=""></p><h3 id="设置记住我功能（使用userFilter）"><a href="#设置记住我功能（使用userFilter）" class="headerlink" title="设置记住我功能（使用userFilter）"></a>设置记住我功能（使用userFilter）</h3><p><strong>如果设置记住我，则下次访问某些url时不用登陆，将记住我即可访问的地址配置让UserFilter拦截</strong></p><p><img src="img/15.png" alt=""></p><p><img src="img/16.png" alt=""></p><p><strong>用户身份实现java.io.Serializable接口（用于存入cookie）</strong></p><p><img src="img/17.png" alt=""></p><p><strong>配置rememberManager</strong></p><p><img src="img/18.png" alt=""></p><p><img src="img/19.png" alt=""></p><p><strong>添加rememberme界面</strong></p><p><img src="img/20.png" alt=""></p><p><strong>配置rememberMe的input名称</strong></p><p><img src="img/21.png" alt=""></p><p><img src="img/22.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins自动化部署项目</title>
      <link href="/2019/09/16/jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/09/16/jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="jenkins介绍"><a href="#jenkins介绍" class="headerlink" title="jenkins介绍"></a>jenkins介绍</h2><h3 id="jenkins概念"><a href="#jenkins概念" class="headerlink" title="jenkins概念"></a>jenkins概念</h3><p>Jenkins是一个开源的、可扩展的持续集成、交付、部署（软件/代码的编译、打包、部署）的基于web界面的平台。允许持续集成和持续交付项目，无论用的是什么平台，可以处理任何类型的构建或持续集成。</p><p>官网：<a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a> 官方文档：<a href="https://jenkins.io/doc/" target="_blank" rel="noopener">https://jenkins.io/doc/</a></p><h3 id="Jenkins特性"><a href="#Jenkins特性" class="headerlink" title="Jenkins特性"></a>Jenkins特性</h3><ol><li><p>开源的java语言开发持续集成工具，支持CI，CD；</p></li><li><p>易于安装部署配置：可通过yum安装,或下载war包以及通过docker容器等快速实现安装部署，可方便web界面配置管理；</p></li><li><p>消息通知及测试报告：集成RSS/E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知，生成JUnit/TestNG测试报告；</p></li><li><p>分布式构建：支持Jenkins能够让多台计算机一起构建/测试；</p></li><li><p>文件识别:Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等； </p></li><li><p>丰富的插件支持:支持扩展插件，你可以开发适合自己团队使用的工具，如git，svn，maven，docker等。</p></li></ol><h2 id="需要的环境"><a href="#需要的环境" class="headerlink" title="需要的环境"></a>需要的环境</h2><p> maven、tomcat、git、jdk，将项目自动部署到linux系统下,演示的服务器上已经安装好git和jdk就不多做解释。</p><p> jenkins、git可与maven、tomcat、jdk放在不同服务器上。本次演示均放在同一个服务器上。</p><p><strong>1. 安装maven</strong></p><p>   下载apache-maven-3.6.2-src.tar.gz，运行命令  <strong>tar -zxvf apache-maven-3.6.2-src.tar.gz /data/jenkins/maven</strong>,将文件解压到/data/jenkins/maven，修改conf文件夹下的settings.xml</p><pre><code>     &lt;mirror&gt;       &lt;id&gt;alimaven&lt;/id&gt;       &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;       &lt;name&gt;aliyun maven&lt;/name&gt;       &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;     &lt;/mirror&gt;</code></pre><p><strong>2. 安装tomcat</strong></p><p>  本次需要两个tomcat(分别命名为tomcat8_jenkins,tomcat8_”项目名“，此处项目名为“test”)，一个用来部署jenkins的war包，一个用来部署需要构建的项目。</p><ol><li><p>官网下载apache-tomcat-8.0.36.tar.gz，运行命令 <strong>tar -zxvf pache-tomcat-8.0.36.tar.gz /data/jenkins/tomcat/tomcat8_jenkins **,</strong>tar -zxvf pache-tomcat-8.0.36.tar.gz /data/jenkins/tomcat/tomcat8_“test”**。</p></li><li><p>分别修改两个tomcat的端口号防止端口占用，即修改tomcat中conf下server.xml文件如下</p><p><strong>tomcat8_jenkins</strong></p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--第一处改动--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Server</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8079<span class="token punctuation">"</span></span> <span class="token attr-name">shutdown</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SHUTDOWN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--第二处改动--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>9100<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HTTP/1.1<span class="token punctuation">"</span></span>           <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20000<span class="token punctuation">"</span></span>           <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--第三处改动--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8009<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AJP/1.3<span class="token punctuation">"</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p><strong>tomcat8_test</strong></p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--第一处改动--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Server</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>9006<span class="token punctuation">"</span></span> <span class="token attr-name">shutdown</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SHUTDOWN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--第二处改动--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>9797<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HTTP/1.1<span class="token punctuation">"</span></span>           <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20000<span class="token punctuation">"</span></span>           <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--第三处改动--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>9010<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AJP/1.3<span class="token punctuation">"</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>3.修改tomcat8_jenkins中conf文件夹下的tomcat-users.xml文件，如下</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manager-gui<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manager-script<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manager-status<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>both<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat,role1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role1<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>deploy<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tomcat<span class="token punctuation">"</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manager-gui,manager-script,manager-status<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre></li></ol><h2 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h2><p>下载jenkins.war并放在/data/jenkins/tomcat/tomcat8_jenkins/webapps中，在tomcat8_jenkins中bin目录中运行./startup.sh启动tomcat8_jenkins。</p><h2 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h2><h3 id="打开jenkins"><a href="#打开jenkins" class="headerlink" title="打开jenkins"></a>打开jenkins</h3><p>在浏览器地址中输入http://服务器ip地址:9100/jenkins/，启动界面如下：</p><p><img src="img/1.png" alt=""></p><p>根据提示将相应文件中的文本复制然后粘贴到输入框中，点击继续，安装默认的插件，需要等待一段时间，若后续需要其他的插件可通过 ManagerJenkins —&gt; ManagePlugins进行安装。</p><h3 id="安装其他插件"><a href="#安装其他插件" class="headerlink" title="安装其他插件"></a>安装其他插件</h3><p>若后续需要其他的插件可通过 ManagerJenkins —&gt; ManagePlugins进行安装。</p><p><strong>Deploy to container Plugin ， Email Extension Plugin ， Maven Integration plugin ， Publish Over SSH</strong></p><h3 id="配置GlobalToolConfiguration"><a href="#配置GlobalToolConfiguration" class="headerlink" title="配置GlobalToolConfiguration"></a>配置GlobalToolConfiguration</h3><p>点击ManagerJenkins —&gt; GlobalToolConfiguration配置如下，实际路径以自己的为准。</p><p><img src="img/10.png" alt=""></p><p><img src="img/11.png" alt=""></p><p><img src="img/12.png" alt=""></p><p><img src="img/13.png" alt=""></p><h3 id="配置ConfigureSystem"><a href="#配置ConfigureSystem" class="headerlink" title="配置ConfigureSystem"></a>配置ConfigureSystem</h3><p> 点击ManagerJenkins —&gt; ConfigureSystem 配置如下几处</p><p><img src="img/14.png" alt=""></p><p>若未设置邮件地址，则构建后邮件通知功能失效</p><p><img src="img/15.png" alt=""></p><p>此处邮箱为POP3邮箱，直接输入邮箱密码即可</p><p><img src="img/16.png" alt=""></p><p><img src="img/17.png" alt=""></p><p>DefaultContent脚本为</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>${ENV, var="JOB_NAME"}-第${BUILD_NUMBER}次构建日志<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">leftmargin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">topmargin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span>    <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>95%<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">11</span>pt<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> Tahoma, Arial, Helvetica, sans-serif</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span><span class="token punctuation">></span></span>来自Mr.Jenkins的邮件通知<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0B610B<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>构建信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>项目名称<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>${PROJECT_NAME}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>触发原因<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：${CAUSE}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                        构建日志<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${BUILD_URL}console<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            ${BUILD_URL}console                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                        单元测试报告<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${BUILD_URL}testReport/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            ${BUILD_URL}testReport/                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                        测试报告<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${PROJECT_URL}ws<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            ${PROJECT_URL}ws/trunk/code/LopWeb/target/site/surefire-report.html                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                       覆盖率报告<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${PROJECT_URL}ws/trunk/code/LopWeb/target/site/jacoco/index.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                           ${PROJECT_URL}ws                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                       工作目录<span class="token entity" title="&nbsp;">&amp;nbsp;</span>：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${PROJECT_URL}ws<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                           ${PROJECT_URL}ws                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0B610B<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>构建日志:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>readonly<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                    <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-family</span><span class="token punctuation">:</span> Courier New</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${BUILD_LOG}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>覆盖率报告<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>${FILE ,path="C:/Program Files (x86)/Jenkins/workspace/                    DOM/trunk/code/LopWeb/target/site/jacoco/index.html"}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>通过SSH将Jenkins从svn拉取的代码通过maven打包war发送到远程服务器进行部署</p><p><img src="img/18.png" alt=""></p><h3 id="创建并配置项目"><a href="#创建并配置项目" class="headerlink" title="创建并配置项目"></a>创建并配置项目</h3><ol><li>接着创建一个maven项目（若没有此选项，则需在jenkins下载maven插件）</li></ol><p><img src="img/2.png" alt=""></p><ol start="2"><li>配置svn地址</li></ol><p><img src="img/3.png" alt=""></p><ol start="3"><li>构建触发器：</li></ol><p>Build periodically：周期性进行项目构建，这个是到指定的时间必须触发构建任务,此处设为每三十分钟</p><p>Poll SCM:定时检查源码变更（根据SCM软件的版本号），如果有更新就checkout最新code下来，然后执行构建动作，此处设为每十分钟检查一次</p><p><img src="img/4.png" alt=""></p><ol start="4"><li>PreSteps:</li></ol><p>构建前先执行如下命令，未设置 chmod 777 restart-tomcat8.sh 脚本会执行失败。</p><p><img src="img/5.png" alt=""></p><p>脚本内容如下：</p><pre class=" language-shell"><code class="language-shell">#/bin/bash#这一句必须得有，不然会执行失败，路径根据实际情况配置export JAVA_HOME=/data/jdk1.8.0_161#先删除tomcat下之前打的war包及其解压包rm -rf /data/jenkins/tomcat/tomcat8/webapps/LopWeb*echo -e "\n\n\n"#force kill flag,if equal [f] to force kill allflag="HelloShell"if test $# -gt 0then    flag=$1fipids=`ps -ef|grep tomcat8 | grep -v "grep" | awk '{print $2}'`#pids=`ps -ef|grep -w tomcat | grep -v "grep" | awk '{print $2}'`count=0pid_num=0for pid in ${pids}do    pid_num=${pid}    count=`expr ${count} + 1`doneif test $[count] -gt 1then    if test $flag = "f"    then        for pid in ${pids}        do            echo "kill " ${pid}            kill -9 ${pid}        done        echo "Force kill more progress success!"    else        echo "Exist more progress is running, Input param [f] to force kill."    fielse    if test $[count] -eq 1    then        kill -9 ${pid_num}        echo "Kill " ${pid_num} " Success!"    else        echo "Clear!"    fifi# startecho "start tomcat8"bash /data/jenkins/tomcat/tomcat8/bin/startup.shecho -e "\n\n\n"</code></pre><ol start="5"><li><p>Build</p><p><strong>RootPOM</strong>：项目中pom.xml地址。</p><p><strong>Goals and options:</strong>目的是maven 打包执行的命令。mvn surefire-report:report 作用是生成代码测试报告。若需要生成测试报告则需要在项目pom.xml文件中加入如下配置：</p><pre class=" language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0-M3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testFailureIgnore</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testFailureIgnore</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 限定跑哪些测试类 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- "**/Test*.java" - includes all of its subdirectories and all Java filenames that start with "Test". --></span>          <span class="token comment" spellcheck="true">&lt;!-- "**/*Test.java" - includes all of its subdirectories and all Java filenames that end with "Test". --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*Test.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- 支持正则 http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html--></span>          <span class="token comment" spellcheck="true">&lt;!-- &lt;include>%regex[.*(Cat|Dog).*Test.*]&lt;/include> --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></code></pre><p><img src="img/6.png" alt=""></p></li><li><p>构建后操作</p><p> 设置项目打包后发布的容器地址</p><p><img src="img/7.png" alt=""></p><p>设置构建后邮箱通知，点击下方圈红按钮设置触发条件</p></li></ol><p><img src="img/8.png" alt=""></p><p><img src="img/9.png" alt=""></p><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>点击BuildNow，第一次运行maven需要下载jar文件，所以会比较慢。</p><p><img src="img/19.png" alt=""></p><p><img src="img/20.png" alt=""></p><p>邮件内容如下</p><p><img src="img/21.png" alt=""></p><h3 id="构建失败的一些问题"><a href="#构建失败的一些问题" class="headerlink" title="构建失败的一些问题"></a>构建失败的一些问题</h3><pre class=" language-java"><code class="language-java">Caused by<span class="token operator">:</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>cargo<span class="token punctuation">.</span>container<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>TomcatManagerException<span class="token operator">:</span>The Tomcat Manager responded "FAIL <span class="token operator">-</span> Deployed application at context path <span class="token punctuation">[</span><span class="token operator">/</span>LopWeb<span class="token punctuation">]</span>but context failed to start<span class="token string">" instead of the expected "</span>OK" message    此问题在构建成功，发布到容器时报的错误，一般是项目的问题，此实验为项目数据库未连接成功导致的，具体情况可根据数据库日志查看</code></pre><pre class=" language-java"><code class="language-java"><span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> Failed to execute goal on project LopWeb<span class="token operator">:</span>Could not resolve dependencies <span class="token keyword">for</span> project com<span class="token punctuation">.</span>asiainfo<span class="token punctuation">.</span>lop<span class="token operator">:</span>LopWeb<span class="token operator">:</span>war<span class="token operator">:</span><span class="token number">1.0</span><span class="token operator">-</span>SNAPSHOT<span class="token operator">:</span>The following artifacts could not be resolved<span class="token operator">:</span> com<span class="token punctuation">.</span>ibm<span class="token punctuation">.</span>db2<span class="token operator">:</span>db2jcc<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">9.7</span><span class="token punctuation">,</span> com<span class="token punctuation">.</span>ibm<span class="token punctuation">.</span>db2<span class="token operator">:</span>db2java<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">9.7</span><span class="token operator">:</span>Failure to find com<span class="token punctuation">.</span>ibm<span class="token punctuation">.</span>db2<span class="token operator">:</span>db2jcc<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">9.7</span> inhttp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.8</span><span class="token operator">:</span><span class="token number">8081</span><span class="token operator">/</span>repository<span class="token operator">/</span>maven<span class="token operator">-</span><span class="token keyword">public</span> was cached in the local repository<span class="token punctuation">,</span>resolution will not be reattempted until the update interval of asiaInfomaven haselapsed or updates are forced <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">[</span>Help <span class="token number">1</span><span class="token punctuation">]</span>缺少相应的jar包</code></pre><pre class=" language-java"><code class="language-java">ERROR<span class="token operator">:</span> Error fetching remote repo <span class="token string">'origin'</span>hudson<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>git<span class="token punctuation">.</span>GitException<span class="token operator">:</span>Failed to fetch from ssh<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>git<span class="token annotation punctuation">@10</span><span class="token punctuation">.</span>*<span class="token punctuation">.</span>*<span class="token punctuation">.</span><span class="token number">106</span><span class="token operator">:</span><span class="token number">22022</span><span class="token operator">/</span>DOM<span class="token operator">/</span>LopWeb<span class="token punctuation">.</span>git连接公司项目git可能需要内网，开启vpn即可</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
